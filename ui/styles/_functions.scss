@use "sass:math";

/* 
Fluid type scale with CSS Clamp
https://www.aleksandrhovhannisyan.com/blog/fluid-type-scale-with-css-clamp/ 
*/

$media-breakpoints: (
  mobile: 400px,
  tablet: 900px,
  desktop: 1200px,
);

$default-min-bp: map-get($media-breakpoints, "mobile");
$default-max-bp: map-get($media-breakpoints, "desktop");

@function to-rems($px) {
  $rems: math.div($px, 16px) * 1rem;
  @return $rems;
}

@function rnd($number, $places: 0) {
  $n: 1;
  @if $places > 0 {
    @for $i from 1 through $places {
      $n: $n * 10;
    }
  }
  @return math.div(math.round($number * $n), $n);
}

@function clamped(
  $min-px,
  $max-px,
  $min-bp: $default-min-bp,
  $max-bp: $default-max-bp
) {
  $slope: math.div($max-px - $min-px, $max-bp - $min-bp);
  $slope-vw: rnd($slope * 100, 2);
  $intercept-rems: rnd(to-rems($min-px - $slope * $min-bp), 2);
  $min-rems: rnd(to-rems($min-px), 2);
  $max-rems: rnd(to-rems($max-px), 2);
  @return clamp(
    #{$min-rems},
    #{$slope-vw}vw + #{$intercept-rems},
    #{$max-rems}
  );
}
